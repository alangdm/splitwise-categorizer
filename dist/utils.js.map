{"version":3,"names":["COLUMN_REGEX","date","description","category","cost","currency","PAYMENT_METHODS","tc","en","ef","id","lp","ic","db","DESCRIPTION_REGEX","RegExp","Object","keys","join","CATEGORIES","es","sort","a","b","EXCLUDED_CATEGORIES","getColumnIndexes","headers","columns","key","regex","entries","index","findIndex","h","test","parseDescription","rawText","paymentMethod","exec","groups","toLowerCase","getPaymentMethodName","method","lang","normalizeCategoryName","cat","find","isExcludedCategory"],"sourceRoot":"/source_map/","sources":["src/utils.js"],"sourcesContent":["const COLUMN_REGEX = {\n  date: /date|fecha/i,\n  description: /description|descripción/i,\n  category: /category|categoría/i,\n  cost: /cost|coste/i,\n  currency: /currency|moneda/i,\n};\n\nconst PAYMENT_METHODS = {\n  tc: {\n    en: \"Credit Card\",\n  },\n  ef: {\n    en: \"Cash\",\n  },\n  id: {\n    en: \"ID\",\n  },\n  lp: {\n    en: \"LINE Pay\",\n  },\n  ic: {\n    en: \"Suica\",\n  },\n  db: {\n    en: \"Bank Deposit\",\n  },\n};\n\nconst DESCRIPTION_REGEX = new RegExp(\n  `(?:(?<paymentMethod>${Object.keys(PAYMENT_METHODS).join(\n    \"|\"\n  )})\\\\.\\\\s*)?(?<description>.*)`,\n  \"i\"\n);\n\nexport const CATEGORIES = [\n  // entertainment\n  {\n    en: \"Games\",\n    es: \"\",\n  },\n  {\n    en: \"Movies\",\n    es: \"\",\n  },\n  {\n    en: \"Music\",\n    es: \"\",\n  },\n  {\n    en: \"Entertainment - Other\",\n    es: \"\",\n  },\n  {\n    en: \"Sports\",\n    es: \"\",\n  },\n  // food and drink\n  {\n    en: \"Groceries\",\n    es: \"\",\n  },\n  {\n    en: \"Dining out\",\n    es: \"\",\n  },\n  {\n    en: \"Other\",\n    es: \"\",\n  },\n  {\n    en: \"Liquor\",\n    es: \"\",\n  },\n  // home\n  {\n    en: \"Rent\",\n    es: \"\",\n  },\n  {\n    en: \"Mortgage\",\n    es: \"\",\n  },\n  {\n    en: \"Household supplies\",\n    es: \"\",\n  },\n  {\n    en: \"Furniture\",\n    es: \"\",\n  },\n  {\n    en: \"Maintenance\",\n    es: \"\",\n  },\n  {\n    en: \"Home - Other\",\n    es: \"\",\n  },\n  {\n    en: \"Pets\",\n    es: \"\",\n  },\n  {\n    en: \"Services\",\n    es: \"\",\n  },\n  {\n    en: \"Electronics\",\n    es: \"\",\n  },\n  // life\n  {\n    en: \"Insurance\",\n    es: \"\",\n  },\n  {\n    en: \"Clothing\",\n    es: \"\",\n  },\n  {\n    en: \"Gifts\",\n    es: \"\",\n  },\n  {\n    en: \"Medical expenses\",\n    es: \"\",\n  },\n  {\n    en: \"Life - Other\",\n    es: \"\",\n  },\n  {\n    en: \"Taxes\",\n    es: \"\",\n  },\n  {\n    en: \"Education\",\n    es: \"\",\n  },\n  {\n    en: \"Childcare\",\n    es: \"\",\n  },\n  // transportation\n  {\n    en: \"Parking\",\n    es: \"\",\n  },\n  {\n    en: \"Car\",\n    es: \"\",\n  },\n  {\n    en: \"Bus/train\",\n    es: \"\",\n  },\n  {\n    en: \"Gas/fuel\",\n    es: \"\",\n  },\n  {\n    en: \"Transportation - Other\",\n    es: \"\",\n  },\n  {\n    en: \"Plane\",\n    es: \"\",\n  },\n  {\n    en: \"Taxi\",\n    es: \"\",\n  },\n  {\n    en: \"Bicycle\",\n    es: \"\",\n  },\n  {\n    en: \"Hotel\",\n    es: \"\",\n  },\n  // uncategorized\n  {\n    en: \"General\",\n    es: \"\",\n  },\n  // utilities\n  {\n    en: \"Electricity\",\n    es: \"\",\n  },\n  {\n    en: \"Heat/gas\",\n    es: \"\",\n  },\n  {\n    en: \"Water\",\n    es: \"\",\n  },\n  {\n    en: \"TV/Phone/Internet\",\n    es: \"\",\n  },\n  {\n    en: \"Other\",\n    es: \"\",\n  },\n  {\n    en: \"Trash\",\n    es: \"\",\n  },\n  {\n    en: \"Cleaning\",\n    es: \"\",\n  },\n];\n\nCATEGORIES.sort((a, b) => {\n  if (a.en < b.en) {\n    return -1;\n  } else if (a.en > b.en) {\n    return 1;\n  }\n  return 0;\n});\n\nexport const EXCLUDED_CATEGORIES = [\n  {\n    en: \"Payment\",\n    es: \"\",\n  },\n];\n\nexport const getColumnIndexes = (headers) => {\n  const columns = {};\n  for (const [key, regex] of Object.entries(COLUMN_REGEX)) {\n    const index = headers.findIndex((h) => regex.test(h));\n    columns[key] = index;\n  }\n  return columns;\n};\n\nexport const parseDescription = (rawText) => {\n  const { paymentMethod, description } = DESCRIPTION_REGEX.exec(rawText).groups;\n  return { paymentMethod: paymentMethod?.toLowerCase(), description };\n};\n\nexport const getPaymentMethodName = (method, lang = \"en\") => {\n  return PAYMENT_METHODS[method]?.[lang];\n};\n\nexport const normalizeCategoryName = (category) => {\n  const cat = CATEGORIES.find(\n    ({ en, es }) => category === en || category === es\n  );\n  return cat?.en ?? \"\";\n};\n\nexport const isExcludedCategory = (category) => {\n  const cat = EXCLUDED_CATEGORIES.find(\n    ({ en, es }) => category === en || category === es\n  );\n  return !!cat;\n};\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACnBC,IAAI,EAAE,aADa;EAEnBC,WAAW,EAAE,0BAFM;EAGnBC,QAAQ,EAAE,qBAHS;EAInBC,IAAI,EAAE,aAJa;EAKnBC,QAAQ,EAAE;AALS,CAArB;AAQA,MAAMC,eAAe,GAAG;EACtBC,EAAE,EAAE;IACFC,EAAE,EAAE;EADF,CADkB;EAItBC,EAAE,EAAE;IACFD,EAAE,EAAE;EADF,CAJkB;EAOtBE,EAAE,EAAE;IACFF,EAAE,EAAE;EADF,CAPkB;EAUtBG,EAAE,EAAE;IACFH,EAAE,EAAE;EADF,CAVkB;EAatBI,EAAE,EAAE;IACFJ,EAAE,EAAE;EADF,CAbkB;EAgBtBK,EAAE,EAAE;IACFL,EAAE,EAAE;EADF;AAhBkB,CAAxB;AAqBA,MAAMM,iBAAiB,GAAG,IAAIC,MAAJ,CACvB,uBAAsBC,MAAM,CAACC,IAAP,CAAYX,eAAZ,EAA6BY,IAA7B,CACrB,GADqB,CAErB,8BAHsB,EAIxB,GAJwB,CAA1B;AAOA,OAAO,MAAMC,UAAU,GAAG,CACxB;AACA;EACEX,EAAE,EAAE,OADN;EAEEY,EAAE,EAAE;AAFN,CAFwB,EAMxB;EACEZ,EAAE,EAAE,QADN;EAEEY,EAAE,EAAE;AAFN,CANwB,EAUxB;EACEZ,EAAE,EAAE,OADN;EAEEY,EAAE,EAAE;AAFN,CAVwB,EAcxB;EACEZ,EAAE,EAAE,uBADN;EAEEY,EAAE,EAAE;AAFN,CAdwB,EAkBxB;EACEZ,EAAE,EAAE,QADN;EAEEY,EAAE,EAAE;AAFN,CAlBwB,EAsBxB;AACA;EACEZ,EAAE,EAAE,WADN;EAEEY,EAAE,EAAE;AAFN,CAvBwB,EA2BxB;EACEZ,EAAE,EAAE,YADN;EAEEY,EAAE,EAAE;AAFN,CA3BwB,EA+BxB;EACEZ,EAAE,EAAE,OADN;EAEEY,EAAE,EAAE;AAFN,CA/BwB,EAmCxB;EACEZ,EAAE,EAAE,QADN;EAEEY,EAAE,EAAE;AAFN,CAnCwB,EAuCxB;AACA;EACEZ,EAAE,EAAE,MADN;EAEEY,EAAE,EAAE;AAFN,CAxCwB,EA4CxB;EACEZ,EAAE,EAAE,UADN;EAEEY,EAAE,EAAE;AAFN,CA5CwB,EAgDxB;EACEZ,EAAE,EAAE,oBADN;EAEEY,EAAE,EAAE;AAFN,CAhDwB,EAoDxB;EACEZ,EAAE,EAAE,WADN;EAEEY,EAAE,EAAE;AAFN,CApDwB,EAwDxB;EACEZ,EAAE,EAAE,aADN;EAEEY,EAAE,EAAE;AAFN,CAxDwB,EA4DxB;EACEZ,EAAE,EAAE,cADN;EAEEY,EAAE,EAAE;AAFN,CA5DwB,EAgExB;EACEZ,EAAE,EAAE,MADN;EAEEY,EAAE,EAAE;AAFN,CAhEwB,EAoExB;EACEZ,EAAE,EAAE,UADN;EAEEY,EAAE,EAAE;AAFN,CApEwB,EAwExB;EACEZ,EAAE,EAAE,aADN;EAEEY,EAAE,EAAE;AAFN,CAxEwB,EA4ExB;AACA;EACEZ,EAAE,EAAE,WADN;EAEEY,EAAE,EAAE;AAFN,CA7EwB,EAiFxB;EACEZ,EAAE,EAAE,UADN;EAEEY,EAAE,EAAE;AAFN,CAjFwB,EAqFxB;EACEZ,EAAE,EAAE,OADN;EAEEY,EAAE,EAAE;AAFN,CArFwB,EAyFxB;EACEZ,EAAE,EAAE,kBADN;EAEEY,EAAE,EAAE;AAFN,CAzFwB,EA6FxB;EACEZ,EAAE,EAAE,cADN;EAEEY,EAAE,EAAE;AAFN,CA7FwB,EAiGxB;EACEZ,EAAE,EAAE,OADN;EAEEY,EAAE,EAAE;AAFN,CAjGwB,EAqGxB;EACEZ,EAAE,EAAE,WADN;EAEEY,EAAE,EAAE;AAFN,CArGwB,EAyGxB;EACEZ,EAAE,EAAE,WADN;EAEEY,EAAE,EAAE;AAFN,CAzGwB,EA6GxB;AACA;EACEZ,EAAE,EAAE,SADN;EAEEY,EAAE,EAAE;AAFN,CA9GwB,EAkHxB;EACEZ,EAAE,EAAE,KADN;EAEEY,EAAE,EAAE;AAFN,CAlHwB,EAsHxB;EACEZ,EAAE,EAAE,WADN;EAEEY,EAAE,EAAE;AAFN,CAtHwB,EA0HxB;EACEZ,EAAE,EAAE,UADN;EAEEY,EAAE,EAAE;AAFN,CA1HwB,EA8HxB;EACEZ,EAAE,EAAE,wBADN;EAEEY,EAAE,EAAE;AAFN,CA9HwB,EAkIxB;EACEZ,EAAE,EAAE,OADN;EAEEY,EAAE,EAAE;AAFN,CAlIwB,EAsIxB;EACEZ,EAAE,EAAE,MADN;EAEEY,EAAE,EAAE;AAFN,CAtIwB,EA0IxB;EACEZ,EAAE,EAAE,SADN;EAEEY,EAAE,EAAE;AAFN,CA1IwB,EA8IxB;EACEZ,EAAE,EAAE,OADN;EAEEY,EAAE,EAAE;AAFN,CA9IwB,EAkJxB;AACA;EACEZ,EAAE,EAAE,SADN;EAEEY,EAAE,EAAE;AAFN,CAnJwB,EAuJxB;AACA;EACEZ,EAAE,EAAE,aADN;EAEEY,EAAE,EAAE;AAFN,CAxJwB,EA4JxB;EACEZ,EAAE,EAAE,UADN;EAEEY,EAAE,EAAE;AAFN,CA5JwB,EAgKxB;EACEZ,EAAE,EAAE,OADN;EAEEY,EAAE,EAAE;AAFN,CAhKwB,EAoKxB;EACEZ,EAAE,EAAE,mBADN;EAEEY,EAAE,EAAE;AAFN,CApKwB,EAwKxB;EACEZ,EAAE,EAAE,OADN;EAEEY,EAAE,EAAE;AAFN,CAxKwB,EA4KxB;EACEZ,EAAE,EAAE,OADN;EAEEY,EAAE,EAAE;AAFN,CA5KwB,EAgLxB;EACEZ,EAAE,EAAE,UADN;EAEEY,EAAE,EAAE;AAFN,CAhLwB,CAAnB;AAsLPD,UAAU,CAACE,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAU;EACxB,IAAID,CAAC,CAACd,EAAF,GAAOe,CAAC,CAACf,EAAb,EAAiB;IACf,OAAO,CAAC,CAAR;EACD,CAFD,MAEO,IAAIc,CAAC,CAACd,EAAF,GAAOe,CAAC,CAACf,EAAb,EAAiB;IACtB,OAAO,CAAP;EACD;;EACD,OAAO,CAAP;AACD,CAPD;AASA,OAAO,MAAMgB,mBAAmB,GAAG,CACjC;EACEhB,EAAE,EAAE,SADN;EAEEY,EAAE,EAAE;AAFN,CADiC,CAA5B;AAOP,OAAO,MAAMK,gBAAgB,GAAIC,OAAD,IAAa;EAC3C,MAAMC,OAAO,GAAG,EAAhB;;EACA,KAAK,MAAM,CAACC,GAAD,EAAMC,KAAN,CAAX,IAA2Bb,MAAM,CAACc,OAAP,CAAe9B,YAAf,CAA3B,EAAyD;IACvD,MAAM+B,KAAK,GAAGL,OAAO,CAACM,SAAR,CAAmBC,CAAD,IAAOJ,KAAK,CAACK,IAAN,CAAWD,CAAX,CAAzB,CAAd;IACAN,OAAO,CAACC,GAAD,CAAP,GAAeG,KAAf;EACD;;EACD,OAAOJ,OAAP;AACD,CAPM;AASP,OAAO,MAAMQ,gBAAgB,GAAIC,OAAD,IAAa;EAC3C,MAAM;IAAEC,aAAF;IAAiBnC;EAAjB,IAAiCY,iBAAiB,CAACwB,IAAlB,CAAuBF,OAAvB,EAAgCG,MAAvE;EACA,OAAO;IAAEF,aAAa,EAAEA,aAAa,EAAEG,WAAf,EAAjB;IAA+CtC;EAA/C,CAAP;AACD,CAHM;AAKP,OAAO,MAAMuC,oBAAoB,GAAG,CAACC,MAAD,EAASC,IAAI,GAAG,IAAhB,KAAyB;EAC3D,OAAOrC,eAAe,CAACoC,MAAD,CAAf,GAA0BC,IAA1B,CAAP;AACD,CAFM;AAIP,OAAO,MAAMC,qBAAqB,GAAIzC,QAAD,IAAc;EACjD,MAAM0C,GAAG,GAAG1B,UAAU,CAAC2B,IAAX,CACV,CAAC;IAAEtC,EAAF;IAAMY;EAAN,CAAD,KAAgBjB,QAAQ,KAAKK,EAAb,IAAmBL,QAAQ,KAAKiB,EADtC,CAAZ;EAGA,OAAOyB,GAAG,EAAErC,EAAL,IAAW,EAAlB;AACD,CALM;AAOP,OAAO,MAAMuC,kBAAkB,GAAI5C,QAAD,IAAc;EAC9C,MAAM0C,GAAG,GAAGrB,mBAAmB,CAACsB,IAApB,CACV,CAAC;IAAEtC,EAAF;IAAMY;EAAN,CAAD,KAAgBjB,QAAQ,KAAKK,EAAb,IAAmBL,QAAQ,KAAKiB,EADtC,CAAZ;EAGA,OAAO,CAAC,CAACyB,GAAT;AACD,CALM"}