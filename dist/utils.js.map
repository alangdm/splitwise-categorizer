{"version":3,"names":["COLUMN_REGEX","date","description","category","cost","currency","PAYMENT_METHODS","key","en","DESCRIPTION_REGEX","RegExp","map","join","CATEGORIES","es","EXCLUDED_CATEGORIES","sortBy","property","a","b","sort","getColumnIndexes","headers","columns","regex","Object","entries","index","findIndex","h","test","parseDescription","rawText","paymentMethod","exec","groups","toLowerCase","getPaymentMethodName","method","lang","pm","find","normalizeCategoryName","cat","isExcludedCategory"],"sourceRoot":"/source_map/","sources":["src/utils.js"],"sourcesContent":["const COLUMN_REGEX = {\n  date: /date|fecha/i,\n  description: /description|descripción/i,\n  category: /category|categoría/i,\n  cost: /cost|coste/i,\n  currency: /currency|moneda/i,\n};\n\nexport const PAYMENT_METHODS = [\n  {\n    key: \"tc\",\n    en: \"Credit Card\",\n  },\n  {\n    key: \"ef\",\n    en: \"Cash\",\n  },\n  {\n    key: \"id\",\n    en: \"ID\",\n  },\n  {\n    key: \"lp\",\n    en: \"LINE Pay\",\n  },\n  {\n    key: \"ic\",\n    en: \"Suica\",\n  },\n  {\n    key: \"db\",\n    en: \"Bank Deposit\",\n  },\n];\n\nconst DESCRIPTION_REGEX = new RegExp(\n  `(?:(?<paymentMethod>${PAYMENT_METHODS.map(({ key }) => key).join(\n    \"|\"\n  )})\\\\.\\\\s*)?(?<description>.*)`,\n  \"i\"\n);\n\nexport const CATEGORIES = [\n  // entertainment\n  {\n    en: \"Games\",\n    es: \"\",\n  },\n  {\n    en: \"Movies\",\n    es: \"\",\n  },\n  {\n    en: \"Music\",\n    es: \"\",\n  },\n  {\n    en: \"Entertainment - Other\",\n    es: \"\",\n  },\n  {\n    en: \"Sports\",\n    es: \"\",\n  },\n  // food and drink\n  {\n    en: \"Groceries\",\n    es: \"\",\n  },\n  {\n    en: \"Dining out\",\n    es: \"\",\n  },\n  {\n    en: \"Other\",\n    es: \"\",\n  },\n  {\n    en: \"Liquor\",\n    es: \"\",\n  },\n  // home\n  {\n    en: \"Rent\",\n    es: \"\",\n  },\n  {\n    en: \"Mortgage\",\n    es: \"\",\n  },\n  {\n    en: \"Household supplies\",\n    es: \"\",\n  },\n  {\n    en: \"Furniture\",\n    es: \"\",\n  },\n  {\n    en: \"Maintenance\",\n    es: \"\",\n  },\n  {\n    en: \"Home - Other\",\n    es: \"\",\n  },\n  {\n    en: \"Pets\",\n    es: \"\",\n  },\n  {\n    en: \"Services\",\n    es: \"\",\n  },\n  {\n    en: \"Electronics\",\n    es: \"\",\n  },\n  // life\n  {\n    en: \"Insurance\",\n    es: \"\",\n  },\n  {\n    en: \"Clothing\",\n    es: \"\",\n  },\n  {\n    en: \"Gifts\",\n    es: \"\",\n  },\n  {\n    en: \"Medical expenses\",\n    es: \"\",\n  },\n  {\n    en: \"Life - Other\",\n    es: \"\",\n  },\n  {\n    en: \"Taxes\",\n    es: \"\",\n  },\n  {\n    en: \"Education\",\n    es: \"\",\n  },\n  {\n    en: \"Childcare\",\n    es: \"\",\n  },\n  // transportation\n  {\n    en: \"Parking\",\n    es: \"\",\n  },\n  {\n    en: \"Car\",\n    es: \"\",\n  },\n  {\n    en: \"Bus/train\",\n    es: \"\",\n  },\n  {\n    en: \"Gas/fuel\",\n    es: \"\",\n  },\n  {\n    en: \"Transportation - Other\",\n    es: \"\",\n  },\n  {\n    en: \"Plane\",\n    es: \"\",\n  },\n  {\n    en: \"Taxi\",\n    es: \"\",\n  },\n  {\n    en: \"Bicycle\",\n    es: \"\",\n  },\n  {\n    en: \"Hotel\",\n    es: \"\",\n  },\n  // uncategorized\n  {\n    en: \"General\",\n    es: \"\",\n  },\n  // utilities\n  {\n    en: \"Electricity\",\n    es: \"\",\n  },\n  {\n    en: \"Heat/gas\",\n    es: \"\",\n  },\n  {\n    en: \"Water\",\n    es: \"\",\n  },\n  {\n    en: \"TV/Phone/Internet\",\n    es: \"\",\n  },\n  {\n    en: \"Other\",\n    es: \"\",\n  },\n  {\n    en: \"Trash\",\n    es: \"\",\n  },\n  {\n    en: \"Cleaning\",\n    es: \"\",\n  },\n];\n\nexport const EXCLUDED_CATEGORIES = [\n  {\n    en: \"Payment\",\n    es: \"\",\n  },\n];\n\nconst sortBy = (property) => {\n  return (a, b) => {\n    if (a[property] < b[property]) {\n      return -1;\n    } else if (a[property] > b[property]) {\n      return 1;\n    }\n    return 0;\n  };\n};\n\nCATEGORIES.sort(sortBy(\"en\"));\nPAYMENT_METHODS.sort(sortBy(\"en\"));\n\nexport const getColumnIndexes = (headers) => {\n  const columns = {};\n  for (const [key, regex] of Object.entries(COLUMN_REGEX)) {\n    const index = headers.findIndex((h) => regex.test(h));\n    columns[key] = index;\n  }\n  return columns;\n};\n\nexport const parseDescription = (rawText) => {\n  const { paymentMethod, description } = DESCRIPTION_REGEX.exec(rawText).groups;\n  return { paymentMethod: paymentMethod?.toLowerCase(), description };\n};\n\nexport const getPaymentMethodName = (method, lang = \"en\") => {\n  const pm = PAYMENT_METHODS.find(({ key }) => key === method);\n  return pm?.[lang] ?? \"\";\n};\n\nexport const normalizeCategoryName = (category) => {\n  const cat = CATEGORIES.find(\n    ({ en, es }) => category === en || category === es\n  );\n  return cat?.en ?? \"\";\n};\n\nexport const isExcludedCategory = (category) => {\n  const cat = EXCLUDED_CATEGORIES.find(\n    ({ en, es }) => category === en || category === es\n  );\n  return !!cat;\n};\n"],"mappings":"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"}