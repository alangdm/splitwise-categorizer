{"version":3,"names":["html","css","LitElement","isExcludedCategory","normalizeCategoryName","CATEGORIES","PAYMENT_METHODS","resetCSS","sharedCSS","getColumnIndexes","parseDescription","SplitwiseCategorizer","styles","properties","categories","type","Array","state","isCategorizing","Boolean","reflect","totals","Object","constructor","columns","paymentMethodTotals","csvArray","shadowRoot","querySelector","render","_categorize","_reset","en","items","subtotals","key","_parseContents","csvContents","cols","row","values","split","date","paymentMethod","description","rawCategory","category","cost","parseFloat","currency","console","error","push","csv","csvRows","content","filter","i","csvHeaders","slice","length","window","customElements","define"],"sourceRoot":"/source_map/","sources":["src/index.js"],"sourcesContent":["import { html, css, LitElement } from \"lit\";\n\nimport {\n  isExcludedCategory,\n  normalizeCategoryName,\n  CATEGORIES,\n  PAYMENT_METHODS,\n} from \"./utils.js\";\n\nimport { resetCSS } from \"./reset.css.js\";\nimport { sharedCSS } from \"./shared.css.js\";\n\nimport \"./category-table.js\";\nimport \"./csv-input.js\";\n\nimport { getColumnIndexes, parseDescription } from \"./utils.js\";\n\nclass SplitwiseCategorizer extends LitElement {\n  static get styles() {\n    return [\n      resetCSS,\n      sharedCSS,\n      css`\n        :host {\n          height: 100%;\n          padding: 0.5rem;\n          display: grid;\n          grid-template-rows: auto 1fr;\n          gap: 1rem;\n          color: var(--gray-9);\n        }\n        /* header */\n        header {\n          display: flex;\n          flex-flow: column wrap;\n          align-items: start;\n          gap: 0.5rem;\n          padding-bottom: 1rem;\n          border-bottom: 2px solid var(--gray-5);\n        }\n      `,\n    ];\n  }\n\n  static get properties() {\n    return {\n      categories: { type: Array, state: true },\n      isCategorizing: { type: Boolean, reflect: true },\n      totals: { type: Object, state: true },\n    };\n  }\n\n  constructor() {\n    super();\n    this.isCategorizing = false;\n    this.categories = {};\n    this.columns = {};\n    this.totals = {};\n    this.paymentMethodTotals = {};\n  }\n\n  get csvArray() {\n    return this.shadowRoot.querySelector(\"csv-input\").csvArray;\n  }\n\n  render() {\n    return html`\n      <header>\n        <csv-input @change=${this._categorize}></csv-input>\n      </header>\n      <main>\n        ${this.isCategorizing\n          ? html`Categorizing...`\n          : html`<category-table\n              .categories=${this.categories}\n              .totals=${this.totals}\n              .paymentMethodTotals=${this.paymentMethodTotals}\n            ></category-table>`}\n      </main>\n    `;\n  }\n\n  _reset() {\n    this.categories = {};\n    this.totals = {};\n    this.paymentMethodTotals = {};\n    for (const { en } of CATEGORIES) {\n      this.categories[en] = {\n        items: [],\n        subtotals: {},\n      };\n    }\n    for (const { key } of PAYMENT_METHODS) {\n      this.paymentMethodTotals[key] = {};\n    }\n  }\n\n  _parseContents(csvContents) {\n    const cols = this.columns;\n    for (const row of csvContents) {\n      const values = row.split(\",\");\n      const date = values[cols.date];\n      const { paymentMethod, description } = parseDescription(\n        values[cols.description]\n      );\n      const rawCategory = values[cols.category];\n      const cost = parseFloat(values[cols.cost]);\n      const currency = values[cols.currency];\n\n      if (isExcludedCategory(rawCategory)) {\n        // do nothing\n        continue;\n      }\n\n      const category = normalizeCategoryName(rawCategory);\n\n      if (!category) {\n        console.error(\"Couldn't find category: \", category);\n        continue;\n      }\n\n      this.categories[category].items.push({\n        date,\n        description,\n        cost,\n        currency,\n        paymentMethod,\n      });\n\n      if (!this.categories[category].subtotals[currency]) {\n        this.categories[category].subtotals[currency] = cost;\n      } else {\n        this.categories[category].subtotals[currency] += cost;\n      }\n\n      if (!this.totals[currency]) {\n        this.totals[currency] = cost;\n      } else {\n        this.totals[currency] += cost;\n      }\n\n      // payment method\n      if (!paymentMethod) {\n        continue;\n      }\n\n      if (!this.paymentMethodTotals[paymentMethod][currency]) {\n        this.paymentMethodTotals[paymentMethod][currency] = cost;\n      } else {\n        this.paymentMethodTotals[paymentMethod][currency] += cost;\n      }\n    }\n  }\n\n  _categorize() {\n    if (!this.csvArray || this.isCategorizing) {\n      // TODO error handling\n      return;\n    }\n    this.isCategorizing = true;\n    this._reset();\n\n    for (const csv of this.csvArray) {\n      const csvRows = csv.content.split(\"\\n\").filter((i) => i);\n\n      const csvHeaders = csvRows[0];\n      this.columns = getColumnIndexes(csvHeaders.split(\",\"));\n\n      const csvContents = csvRows.slice(1, csvRows.length - 1);\n\n      this._parseContents(csvContents);\n    }\n    this.isCategorizing = false;\n  }\n}\n\nwindow.customElements.define(\"splitwise-categorizer\", SplitwiseCategorizer);\n"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,KAAtC;AAEA,SACEC,kBADF,EAEEC,qBAFF,EAGEC,UAHF,EAIEC,eAJF,QAKO,YALP;AAOA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,OAAO,qBAAP;AACA,OAAO,gBAAP;AAEA,SAASC,gBAAT,EAA2BC,gBAA3B,QAAmD,YAAnD;;AAEA,MAAMC,oBAAN,SAAmCT,UAAnC,CAA8C;EAC3B,WAANU,MAAM,GAAG;IAClB,OAAO,CACLL,QADK,EAELC,SAFK,EAGLP,GAAI;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OArBW,CAAP;EAuBD;;EAEoB,WAAVY,UAAU,GAAG;IACtB,OAAO;MACLC,UAAU,EAAE;QAAEC,IAAI,EAAEC,KAAR;QAAeC,KAAK,EAAE;MAAtB,CADP;MAELC,cAAc,EAAE;QAAEH,IAAI,EAAEI,OAAR;QAAiBC,OAAO,EAAE;MAA1B,CAFX;MAGLC,MAAM,EAAE;QAAEN,IAAI,EAAEO,MAAR;QAAgBL,KAAK,EAAE;MAAvB;IAHH,CAAP;EAKD;;EAEDM,WAAW,GAAG;IACZ;IACA,KAAKL,cAAL,GAAsB,KAAtB;IACA,KAAKJ,UAAL,GAAkB,EAAlB;IACA,KAAKU,OAAL,GAAe,EAAf;IACA,KAAKH,MAAL,GAAc,EAAd;IACA,KAAKI,mBAAL,GAA2B,EAA3B;EACD;;EAEW,IAARC,QAAQ,GAAG;IACb,OAAO,KAAKC,UAAL,CAAgBC,aAAhB,CAA8B,WAA9B,EAA2CF,QAAlD;EACD;;EAEDG,MAAM,GAAG;IACP,OAAO7B,IAAK;AAChB;AACA,6BAA6B,KAAK8B,WAAY;AAC9C;AACA;AACA,UAAU,KAAKZ,cAAL,GACElB,IAAK,iBADP,GAEEA,IAAK;AACjB,4BAA4B,KAAKc,UAAW;AAC5C,wBAAwB,KAAKO,MAAO;AACpC,qCAAqC,KAAKI,mBAAoB;AAC9D,+BAAgC;AAChC;AACA,KAbI;EAcD;;EAEDM,MAAM,GAAG;IACP,KAAKjB,UAAL,GAAkB,EAAlB;IACA,KAAKO,MAAL,GAAc,EAAd;IACA,KAAKI,mBAAL,GAA2B,EAA3B;;IACA,KAAK,MAAM;MAAEO;IAAF,CAAX,IAAqB3B,UAArB,EAAiC;MAC/B,KAAKS,UAAL,CAAgBkB,EAAhB,IAAsB;QACpBC,KAAK,EAAE,EADa;QAEpBC,SAAS,EAAE;MAFS,CAAtB;IAID;;IACD,KAAK,MAAM;MAAEC;IAAF,CAAX,IAAsB7B,eAAtB,EAAuC;MACrC,KAAKmB,mBAAL,CAAyBU,GAAzB,IAAgC,EAAhC;IACD;EACF;;EAEDC,cAAc,CAACC,WAAD,EAAc;IAC1B,MAAMC,IAAI,GAAG,KAAKd,OAAlB;;IACA,KAAK,MAAMe,GAAX,IAAkBF,WAAlB,EAA+B;MAC7B,MAAMG,MAAM,GAAGD,GAAG,CAACE,KAAJ,CAAU,GAAV,CAAf;MACA,MAAMC,IAAI,GAAGF,MAAM,CAACF,IAAI,CAACI,IAAN,CAAnB;MACA,MAAM;QAAEC,aAAF;QAAiBC;MAAjB,IAAiClC,gBAAgB,CACrD8B,MAAM,CAACF,IAAI,CAACM,WAAN,CAD+C,CAAvD;MAGA,MAAMC,WAAW,GAAGL,MAAM,CAACF,IAAI,CAACQ,QAAN,CAA1B;MACA,MAAMC,IAAI,GAAGC,UAAU,CAACR,MAAM,CAACF,IAAI,CAACS,IAAN,CAAP,CAAvB;MACA,MAAME,QAAQ,GAAGT,MAAM,CAACF,IAAI,CAACW,QAAN,CAAvB;;MAEA,IAAI9C,kBAAkB,CAAC0C,WAAD,CAAtB,EAAqC;QACnC;QACA;MACD;;MAED,MAAMC,QAAQ,GAAG1C,qBAAqB,CAACyC,WAAD,CAAtC;;MAEA,IAAI,CAACC,QAAL,EAAe;QACbI,OAAO,CAACC,KAAR,CAAc,0BAAd,EAA0CL,QAA1C;QACA;MACD;;MAED,KAAKhC,UAAL,CAAgBgC,QAAhB,EAA0Bb,KAA1B,CAAgCmB,IAAhC,CAAqC;QACnCV,IADmC;QAEnCE,WAFmC;QAGnCG,IAHmC;QAInCE,QAJmC;QAKnCN;MALmC,CAArC;;MAQA,IAAI,CAAC,KAAK7B,UAAL,CAAgBgC,QAAhB,EAA0BZ,SAA1B,CAAoCe,QAApC,CAAL,EAAoD;QAClD,KAAKnC,UAAL,CAAgBgC,QAAhB,EAA0BZ,SAA1B,CAAoCe,QAApC,IAAgDF,IAAhD;MACD,CAFD,MAEO;QACL,KAAKjC,UAAL,CAAgBgC,QAAhB,EAA0BZ,SAA1B,CAAoCe,QAApC,KAAiDF,IAAjD;MACD;;MAED,IAAI,CAAC,KAAK1B,MAAL,CAAY4B,QAAZ,CAAL,EAA4B;QAC1B,KAAK5B,MAAL,CAAY4B,QAAZ,IAAwBF,IAAxB;MACD,CAFD,MAEO;QACL,KAAK1B,MAAL,CAAY4B,QAAZ,KAAyBF,IAAzB;MACD,CAxC4B,CA0C7B;;;MACA,IAAI,CAACJ,aAAL,EAAoB;QAClB;MACD;;MAED,IAAI,CAAC,KAAKlB,mBAAL,CAAyBkB,aAAzB,EAAwCM,QAAxC,CAAL,EAAwD;QACtD,KAAKxB,mBAAL,CAAyBkB,aAAzB,EAAwCM,QAAxC,IAAoDF,IAApD;MACD,CAFD,MAEO;QACL,KAAKtB,mBAAL,CAAyBkB,aAAzB,EAAwCM,QAAxC,KAAqDF,IAArD;MACD;IACF;EACF;;EAEDjB,WAAW,GAAG;IACZ,IAAI,CAAC,KAAKJ,QAAN,IAAkB,KAAKR,cAA3B,EAA2C;MACzC;MACA;IACD;;IACD,KAAKA,cAAL,GAAsB,IAAtB;;IACA,KAAKa,MAAL;;IAEA,KAAK,MAAMsB,GAAX,IAAkB,KAAK3B,QAAvB,EAAiC;MAC/B,MAAM4B,OAAO,GAAGD,GAAG,CAACE,OAAJ,CAAYd,KAAZ,CAAkB,IAAlB,EAAwBe,MAAxB,CAAgCC,CAAD,IAAOA,CAAtC,CAAhB;MAEA,MAAMC,UAAU,GAAGJ,OAAO,CAAC,CAAD,CAA1B;MACA,KAAK9B,OAAL,GAAef,gBAAgB,CAACiD,UAAU,CAACjB,KAAX,CAAiB,GAAjB,CAAD,CAA/B;MAEA,MAAMJ,WAAW,GAAGiB,OAAO,CAACK,KAAR,CAAc,CAAd,EAAiBL,OAAO,CAACM,MAAR,GAAiB,CAAlC,CAApB;;MAEA,KAAKxB,cAAL,CAAoBC,WAApB;IACD;;IACD,KAAKnB,cAAL,GAAsB,KAAtB;EACD;;AA5J2C;;AA+J9C2C,MAAM,CAACC,cAAP,CAAsBC,MAAtB,CAA6B,uBAA7B,EAAsDpD,oBAAtD"}