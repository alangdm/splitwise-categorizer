{"version":3,"sources":["src/index.js"],"names":["html","css","LitElement","empty","resetCSS","SplitwiseCategorizer","styles","properties","categories","type","Array","state","isCategorizing","Boolean","reflect","total","Number","constructor","columns","date","description","category","cost","currency","csv","shadowRoot","querySelector","value","_categoryTemplate","items","subtotal","map","_categoriesTemplate","Object","entries","length","render","_categorize","_parseContents","csvContents","cols","row","values","split","parseFloat","push","csvRows","filter","i","slice","window","customElements","define"],"mappings":"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","sourceRoot":"/source_map/","sourcesContent":["import { html, css, LitElement, empty } from \"lit\";\n\nimport { resetCSS } from \"./reset.css.js\";\n\nclass SplitwiseCategorizer extends LitElement {\n  static get styles() {\n    return [\n      resetCSS,\n      css`\n        :host {\n          height: 100%;\n          padding: 0.5rem;\n          display: grid;\n          grid-template-rows: auto 1fr;\n          gap: 1rem;\n          color: var(--gray-9);\n        }\n        /* header */\n        header {\n          display: flex;\n          flex-flow: column wrap;\n          align-items: start;\n          gap: 0.5rem;\n          padding-bottom: 1rem;\n          border-bottom: 2px solid var(--gray-5);\n        }\n        label {\n          font-weight: bold;\n        }\n        textarea {\n          resize: block;\n        }\n        textarea:focus-visible {\n          outline: solid var(--primary-color);\n        }\n        button {\n          background: var(--primary-color);\n          text-shadow: 0 1px 0 var(--primary-color);\n          color: var(--primary-contrast-color);\n          padding: 0.75rem 1.5rem;\n          border: none;\n          border-radius: 5px;\n          box-shadow: 0 3px 5px -2px var(--gray-9);\n        }\n        button:focus-visible {\n          outline: none;\n          filter: opacity(0.7);\n        }\n        button:hover {\n          filter: opacity(0.85);\n        }\n        /* table */\n        table {\n          width: 100%;\n          line-height: 2;\n          border-collapse: collapse;\n        }\n        td,\n        th {\n          padding: 0 0.5rem;\n        }\n        .table-header,\n        .table-footer {\n          background: var(--teal-9);\n          color: var(--gray-0);\n          font-weight: bold;\n        }\n        tbody\n          tr:not(.category-footer, .category-header, .table-header, .table-footer):hover {\n          background: var(--teal-2);\n        }\n        .category-header th {\n          text-align: left;\n        }\n        :where(.category-footer, .table-footer) th,\n        .currency {\n          text-align: right;\n        }\n        .category-footer + .category-header {\n          border-top: 2px solid var(--teal-9);\n        }\n      `,\n    ];\n  }\n\n  static get properties() {\n    return {\n      categories: { type: Array, state: true },\n      isCategorizing: { type: Boolean, reflect: true },\n      total: { type: Number, state: true },\n    };\n  }\n\n  constructor() {\n    super();\n    this.isCategorizing = false;\n    this.categories = {};\n    this.columns = {\n      date: 0,\n      description: 1,\n      category: 2,\n      cost: 3,\n      currency: 4,\n    };\n  }\n\n  get csv() {\n    return this.shadowRoot.querySelector(\"#csv\").value;\n  }\n\n  _categoryTemplate([category, { items, subtotal }]) {\n    return html`\n      <tr class=\"category-header\">\n        <th scope=\"row\" colspan=\"4\">${category}</th>\n      </tr>\n      ${items.map(\n        ({ date, description, cost, currency }) => html`\n          <tr>\n            <td>${date}</td>\n            <td>${description}</td>\n            <td class=\"currency\">${currency}</td>\n            <td>${cost}</td>\n          </tr>\n        `\n      )}\n      <tr class=\"category-footer\">\n        <th scope=\"row\" colspan=\"3\">${category} subtotal</th>\n        <td>${subtotal}</td>\n      </tr>\n    `;\n  }\n\n  _categoriesTemplate() {\n    const categories = Object.entries(this.categories);\n    if (categories.length === 0) {\n      return empty;\n    }\n    return html`\n      <table>\n        <tbody>\n          <tr class=\"table-header\">\n            <th scope=\"col\">Date</th>\n            <th scope=\"col\">Description</th>\n            <th scope=\"col\">Currency</th>\n            <th scope=\"col\">Cost</th>\n          </tr>\n          ${categories.map(this._categoryTemplate)}\n          <tr class=\"table-footer\">\n            <th scope=\"row\" colspan=\"3\">Total</th>\n            <td>${this.total}</td>\n          </tr>\n        </tbody>\n      </table>\n    `;\n  }\n\n  render() {\n    return html`\n      <header>\n        <label for=\"csv\">Splitwise CSV</label>\n        <textarea\n          id=\"csv\"\n          rows=\"5\"\n          cols=\"80\"\n          placeholder=\"Paste the full Splitwise CSV here\"\n        ></textarea>\n        <button type=\"button\" @click=${this._categorize}>Categorize</button>\n      </header>\n      <main>\n        ${this.isCategorizing\n          ? html`Categorizing...`\n          : this._categoriesTemplate()}\n      </main>\n    `;\n  }\n\n  _parseContents(csvContents) {\n    // TODO multiple currencies?\n    const cols = this.columns;\n    for (const row of csvContents) {\n      const values = row.split(\",\");\n      const date = values[cols.date];\n      const description = values[cols.description];\n      const category = values[cols.category];\n      const cost = parseFloat(values[cols.cost]);\n      const currency = values[cols.currency];\n\n      if (!this.categories[category]) {\n        this.categories[category] = {\n          items: [],\n          subtotal: 0,\n        };\n      }\n\n      this.categories[category].items.push({\n        date,\n        description,\n        cost,\n        currency,\n      });\n\n      this.categories[category].subtotal += cost;\n      this.total += cost;\n    }\n  }\n\n  _categorize() {\n    if (!this.csv || this.isCategorizing) {\n      // TODO error handling\n      return;\n    }\n    this.isCategorizing = true;\n    this.categories = {};\n    this.total = 0;\n\n    const csvRows = this.csv.split(\"\\n\").filter((i) => i);\n    // TODO set col indexes from csv headers\n    // const csvHeaders = csvRows[0];\n    const csvContents = csvRows.slice(1, csvRows.length - 1);\n\n    this._parseContents(csvContents);\n\n    this.isCategorizing = false;\n  }\n}\n\nwindow.customElements.define(\"splitwise-categorizer\", SplitwiseCategorizer);\n"]}